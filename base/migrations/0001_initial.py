# Generated by Django 5.2.1 on 2025-06-12 14:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergens',
            fields=[
                ('allerg_id', models.IntegerField(primary_key=True, serialize=False)),
                ('allerg_name', models.CharField(max_length=100)),
                ('allerg_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'allergens',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.IntegerField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('stock_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimum_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('ing_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ing_name', models.CharField(max_length=100)),
                ('is_allergen', models.BooleanField()),
                ('unit', models.CharField(blank=True, max_length=20, null=True)),
                ('is_avaible', models.BooleanField()),
                ('quantity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ingredients',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('delivery_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SalesReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_sales', models.DecimalField(decimal_places=2, max_digits=10)),
                ('popular_items', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('table_id', models.IntegerField(primary_key=True, serialize=False)),
                ('table_number', models.IntegerField()),
                ('table_status', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'table_',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('user_type', models.CharField(blank=True, max_length=30, null=True)),
                ('tip_ballance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('permission', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(choices=[('customer', 'Müşteri'), ('waiter', 'Garson'), ('manager', 'Yönetici')], default='customer', max_length=20)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Menuitem',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_avaible', models.BooleanField()),
                ('rate_count', models.IntegerField(blank=True, null=True)),
                ('avg_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.category')),
            ],
            options={
                'db_table': 'menuitem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MakesWith',
            fields=[
                ('pk', models.CompositePrimaryKey('ing_id', 'item_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('quantity_required', models.IntegerField(blank=True, null=True)),
                ('ing', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base.ingredients')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base.menuitem')),
            ],
            options={
                'db_table': 'makes_with',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HasAllergens',
            fields=[
                ('pk', models.CompositePrimaryKey('allerg_id', 'item_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('allerg', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base.allergens')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base.menuitem')),
            ],
            options={
                'db_table': 'has_allergens',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orderitem',
            fields=[
                ('pk', models.CompositePrimaryKey('order_id', 'item_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base.menuitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base.order')),
            ],
            options={
                'db_table': 'orderitem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Nakit'), ('credit_card', 'Kredi Kartı'), ('in_app', 'Uygulama İçi Ödeme')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Beklemede'), ('completed', 'Tamamlandı'), ('failed', 'Başarısız')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='base.order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='table',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.table'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('cart_id', models.AutoField(primary_key=True, serialize=False)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField()),
                ('table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.table')),
            ],
            options={
                'db_table': 'cart',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='table',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.users'),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('manager', 'Yönetici'), ('waiter', 'Garson'), ('kitchen', 'Mutfak')], max_length=20)),
                ('schedule', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.users')),
            ],
            options={
                'db_table': 'base_staff',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.users'),
        ),
        migrations.CreateModel(
            name='Cartitem',
            fields=[
                ('cartitem_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base.cart')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base.menuitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='base.users')),
            ],
            options={
                'db_table': 'cartitem',
                'managed': True,
            },
        ),
    ]
